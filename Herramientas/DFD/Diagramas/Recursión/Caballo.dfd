 Dfd (c)
1
1
9
0
1
422
Recorrido del caballo.                                            Se trata recorrer todos y cada uno de los cuadros de un tablero de ajedrez sin repetir posiciones utilizando el movimiento del Caballo en el ajedrez ( movimiento en forma de 'L' ) .                                El  algoritmo lee desde teclado la posición inicial , almacena la solución en una matriz de 8*8 y la imprime para luego finalizar la ejecución.
6
1
6
Seguir
3
.v.
12
1
10
LeerInicio
1
6
 x, y 
12
1
14
HallarSolucion
1
9
 M, x, y 
12
1
11
VerSolucion
1
10
 M, x , y 
1
2
1
10
LeerInicio
1
6
 x , y
1
47
Lee las posiciones iniciales para el recorrido.
6
1
2
Sw
1
1
4
1
63
'Ingrese a continuación la posición inicial para el recorrido:'
9
1
6
Sw = 1
4
1
15
'Coordenada X?'
5
1
1
x
4
1
15
'Coordenada Y?'
5
1
1
y
7
0
1
31
x<=8 and x>=1 and y<=8 and y>=1
4
1
109
'La posición está fuera del tablero de 8 filas por 8 columnas. Digite una nueva que no exceda estos límites.'
13
6
1
2
sw
1
0
13
11
3
2
1
14
HallarSolucion
1
9
M , x , y
1
64
Prepara la matriz y luego revisa si se pudo hallar una solución.
12
1
5
Ceros
1
1
M
12
1
6
Avanza
1
21
 M, x, y, 1, Hallada 
7
0
1
13
Hallada = .V.
4
1
29
'La solución no fue hallada.'
13
4
1
26
'La solución fue hallada.'
13
3
2
1
11
VerSolucion
1
9
M , x , y
1
71
Muestra uno a uno los movimientos del caballo que llevan a la solución.
6
2
2
x1
1
x
2
y1
1
y
8
1
1
n
1
1
1
1
2
64
1
1
1
4
1
39
'Paso ', n, ' :   ', 'X=', x1,'  Y=',y1
8
1
1
i
1
1
1
1
1
8
1
1
1
8
1
1
j
1
1
1
1
1
8
1
1
1
7
0
1
10
M(i,j)=n+1
13
6
2
2
x1
1
i
2
y1
1
j
6
2
1
i
1
9
1
j
1
9
13
10
10
10
3
2
1
5
Ceros
1
1
M
1
106
Prepara la matriz llenándola de ceros, lo cual indicará que ninguna casilla ha sido pisada por el caballo.
8
1
1
i
1
1
1
1
1
8
1
1
1
8
1
1
j
1
1
1
1
1
8
1
1
1
6
1
6
M(i,j)
1
0
10
10
3
2
1
6
Avanza
1
24
 M, x, y, Paso, Hallada 
1
272
Rutina recursiva que mueve el caballo a la posición indicada por 'x' (fila) y 'y' (columna) e intenta continuar el recorrido (utilizando llamadas a sí misma ) para hallar la solución.    La variable parámetro 'Hallada' le indicará a la rutina llamadora si hubo éxito o no.
6
1
6
M(x,y)
4
Paso
7
0
1
9
Paso = 64
12
1
14
BuscarPosibles
1
18
M, x, y, Px, Py, n
12
1
15
OrdenarPosibles
1
9
Px, Py, n
6
1
7
Hallada
3
.F.
8
1
1
i
1
1
1
1
1
n
1
1
1
12
1
6
Avanza
1
32
M, Px(i), Py(i), Paso+1, Hallada
7
0
1
13
Hallada = .V.
13
6
1
1
i
3
n+1
13
10
7
0
1
11
Hallada=.F.
13
6
1
6
M(x,y)
1
0
13
13
6
1
7
Hallada
3
.V.
13
3
2
1
14
BuscarPosibles
1
20
 M, x, y, Px, Py, n 
1
209
Busca las posibles casillas vacías a las que el caballo puede saltar desde la posición x,y.     'n' tendrá el número de posibilidades que fueron almacenadas en los vectores 'Px' (filas)  y    'Py' (columnas) .
6
1
1
N
1
0
7
0
1
17
X+1<=8 AND Y-2>0 
13
7
0
1
14
M(X+1,Y-2) = 0
13
6
3
1
N
3
N+1
5
PX(N)
3
X+1
5
PY(N)
3
Y-2
13
13
7
0
1
17
X+2<=8 AND Y-1>0 
13
7
0
1
14
M(X+2,Y-1) = 0
13
6
3
1
N
3
N+1
5
PX(N)
3
X+2
5
PY(N)
3
Y-1
13
13
7
0
1
18
X+2<=8 AND Y+1<=8 
13
7
0
1
14
M(X+2,Y+1) = 0
13
6
3
1
N
3
N+1
5
PX(N)
3
X+2
5
PY(N)
3
Y+1
13
13
7
0
1
18
X+1<=8 AND Y+2<=8 
13
7
0
1
14
M(X+1,Y+2) = 0
13
6
3
1
N
3
N+1
5
PX(N)
3
X+1
5
PY(N)
3
Y+2
13
13
7
0
1
17
X-1>0 AND Y+2<=8 
13
7
0
1
14
M(X-1,Y+2) = 0
13
6
3
1
N
3
N+1
5
PX(N)
3
X-1
5
PY(N)
3
Y+2
13
13
7
0
1
17
X-2>0 AND Y+1<=8 
13
7
0
1
14
M(X-2,Y+1) = 0
13
6
3
1
N
3
N+1
5
PX(N)
3
X-2
5
PY(N)
3
Y+1
13
13
7
0
1
16
X-2>0 AND Y-1>0 
13
7
0
1
14
M(X-2,Y-1) = 0
13
6
3
1
N
3
N+1
5
PX(N)
3
X-2
5
PY(N)
3
Y-1
13
13
7
0
1
16
X-1>0 AND Y-2>0 
13
7
0
1
14
M(X-1,Y-2) = 0
13
6
3
1
N
3
N+1
5
PX(N)
3
X-1
5
PY(N)
3
Y-2
13
13
3
2
1
15
OrdenarPosibles
1
10
 Px, Py, n
1
129
Ordena de acuerdo a la cercanía con el borde del tablero todos los posibles movimientos almacenados en los vectores 'Px' y 'Py' .
8
1
1
I
1
1
1
1
3
N-1
1
1
1
8
1
1
J
1
3
I+1
1
1
N
1
1
1
12
1
9
DISTANCIA
1
9
PX(I),DI1
12
1
9
DISTANCIA
1
9
PY(I),DI2
7
0
1
7
DI1<DI2
6
2
5
DIMIN
3
DI2
5
DIMAX
3
DI1
13
6
2
5
DIMIN
3
DI1
5
DIMAX
3
DI2
13
12
1
9
DISTANCIA
1
9
PX(J),DJ1
12
1
9
DISTANCIA
1
9
PY(J),DJ2
7
0
1
7
DJ1<DJ2
6
2
5
DJMIN
3
DJ2
5
DJMAX
3
DJ1
13
6
2
5
DJMIN
3
DJ1
5
DJMAX
3
DJ2
13
7
0
1
68
(DJMIN<DIMIN) OR                 ( (DJMIN=DIMIN) AND (DJMAX<DIMAX) )
13
6
3
4
TEMP
5
PX(I)
5
PX(I)
5
PX(J)
5
PX(J)
4
TEMP
6
3
4
TEMP
5
PY(I)
5
PY(I)
5
PY(J)
5
PY(J)
4
TEMP
13
10
10
3
2
1
9
DISTANCIA
1
5
P,RES
1
65
Halla la distancia de un punto al límite más cercano entre 1 y 8.
7
0
1
5
P > 4
6
1
3
RES
3
P-1
13
6
1
3
RES
3
8-P
13
3
